{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\geral\\\\Documents\\\\csp3-b335-jove-bonafe\\\\csp3-b335-jove-bonafe\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { Form, Button } from 'react-bootstrap';\nimport { useState, useEffect, useContext } from 'react';\nimport UserContext from '../UserContext';\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  // State hooks to store the values of the input fields\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  // State to determine whether submit button is enabled or not\n  const [isActive, setIsActive] = useState(true);\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  console.log(email);\n  console.log(password);\n\n  // useEffect() will be triggered every time the state of email and password changes\n  useEffect(() => {\n    // Validation to enable submit button when all fields are populated and both passwords match\n    if (email !== '' && password !== '') {\n      setIsActive(true);\n    } else {\n      setIsActive(false);\n    }\n  }, [email, password]);\n  function authenticate(e) {\n    // Prevents page redirection via form submission\n    e.preventDefault();\n    fetch('http://localhost:4004/b4/users/login', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      // successful login\n      if (data) {\n        localStorage.setItem('access_token', data);\n        // setUser(data); // user = {access: adskjaslkdqwk }\n        retrieveUserDetails(data);\n        alert(`You are now logged in`);\n      } else if (data.error == \"No Email Found\") {\n        alert(`Email not found`);\n      } else {\n        alert(`${email} does not exist`);\n      }\n    });\n    // Clear input fields after submission\n    setEmail('');\n    setPassword('');\n  }\n  const retrieveUserDetails = token => {\n    fetch(\"http://localhost:4000/users/details\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      setUser({\n        id: data._id,\n        isAdmin: data.isAdmin\n      });\n      console.log(user);\n    });\n  };\n  return user.id !== null ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: e => authenticate(e),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-5 text-center\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"userEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"password\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this), isActive ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      id: \"submitBtn\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      type: \"submit\",\n      id: \"submitBtn\",\n      disabled: true,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }, this);\n}\n_s(Login, \"EnSFU1Zd4Dogv4Ehp+fZtw1o4Ls=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Form","Button","useState","useEffect","useContext","UserContext","Navigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","isActive","setIsActive","user","setUser","console","log","authenticate","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","localStorage","setItem","retrieveUserDetails","alert","error","token","Authorization","id","_id","isAdmin","to","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","children","className","Group","controlId","Label","Control","type","placeholder","value","onChange","target","required","variant","disabled","_c","$RefreshReg$"],"sources":["C:/Users/geral/Documents/csp3-b335-jove-bonafe/csp3-b335-jove-bonafe/src/pages/Login.js"],"sourcesContent":["import { Form, Button } from 'react-bootstrap';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport UserContext from '../UserContext';\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n\r\n\t// State hooks to store the values of the input fields\r\n\tconst [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // State to determine whether submit button is enabled or not\r\n    const [isActive, setIsActive] = useState(true);\r\n\r\n    const { user, setUser } = useContext(UserContext);\r\n\r\n\tconsole.log(email);\r\n\tconsole.log(password);\r\n\r\n    // useEffect() will be triggered every time the state of email and password changes\r\n\tuseEffect(() => {\r\n\r\n        // Validation to enable submit button when all fields are populated and both passwords match\r\n        if(email !== '' && password !== ''){\r\n            setIsActive(true);\r\n        }else{\r\n            setIsActive(false);\r\n        }\r\n    }, [email, password]);\r\n\r\n    function authenticate(e) {\r\n\r\n        // Prevents page redirection via form submission\r\n        e.preventDefault();\r\n\r\n\t\tfetch('http://localhost:4004/b4/users/login',{\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => {\r\n\t\t\tconsole.log(data)\r\n\t\t\t// successful login\r\n\t\t\tif(data){\r\n\r\n\t\t\t\tlocalStorage.setItem('access_token', data);\r\n\t\t\t\t// setUser(data); // user = {access: adskjaslkdqwk }\r\n\t\t\t\tretrieveUserDetails(data);\r\n\r\n\t\t\t\talert(`You are now logged in`);\r\n\r\n\t\t\t\r\n\t\t\t} else if (data.error == \"No Email Found\") {\r\n\r\n\t\t\t\talert(`Email not found`);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\talert(`${email} does not exist`)\r\n\t\t\t}\r\n\t\t})\r\n\t\t// Clear input fields after submission\r\n\t\tsetEmail('');\r\n\t\tsetPassword('');\r\n\t}\r\n\r\n\tconst retrieveUserDetails = (token) => {\r\n\r\n\t\tfetch(\"http://localhost:4000/users/details\", {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => {\r\n\t\t\tsetUser({\r\n\t\t\t\tid: data._id,\r\n\t\t\t\tisAdmin: data.isAdmin\r\n\t\t\t})\r\n\r\n\t\t\tconsole.log(user);\r\n\t\t})\r\n\t}\r\n\r\n    return ( \r\n      \t(user.id !== null)?\r\n      \t\t<Navigate to=\"/\" />\r\n      \t:\r\n\t\t    <Form onSubmit={(e) => authenticate(e)}>\r\n\t\t    \t<h1 className=\"my-5 text-center\">Login</h1>\r\n\t\t        <Form.Group controlId=\"userEmail\">\r\n\t\t            <Form.Label>Email address</Form.Label>\r\n\t\t            <Form.Control \r\n\t\t                type=\"email\" \r\n\t\t                placeholder=\"Enter email\"\r\n\t\t                value={email}\r\n\t\t    \t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t                required\r\n\t\t            />\r\n\t\t        </Form.Group>\r\n\r\n\t\t        <Form.Group controlId=\"password\">\r\n\t\t            <Form.Label>Password</Form.Label>\r\n\t\t            <Form.Control \r\n\t\t                type=\"password\" \r\n\t\t                placeholder=\"Password\"\r\n\t\t                value={password}\r\n\t\t    \t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t                required\r\n\t\t            />\r\n\t\t        </Form.Group>\r\n\r\n\t\t         { isActive ? \r\n\t                <Button variant=\"primary\" type=\"submit\" id=\"submitBtn\">\r\n\t                    Submit\r\n\t                </Button>\r\n\t                : \r\n\t                <Button variant=\"danger\" type=\"submit\" id=\"submitBtn\" disabled>\r\n\t                    Submit\r\n\t                </Button>\r\n\t            }\r\n\t\t    </Form>\r\n\t)\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}